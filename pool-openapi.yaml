openapi: "3.1.0"
info:
  title: "pool API"
  description: "pool service API"
  version: "1.0.0"
servers:
  - url: "https://localhost:8080"
paths:
  /api/v0/pool/client/update:
    put:
      summary: "PUT api/v0/pool/client/update"
      operationId: "updateClient"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateClientDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullClientDto"
  /api/v0/pool/client/add:
    post:
      summary: "POST api/v0/pool/client/add"
      operationId: "addClient"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateClientDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullClientDto"
  /api/v0/pool/client/all:
    get:
      summary: "GET api/v0/pool/client/all"
      operationId: "getClients"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ShortClientDto"
  /api/v0/pool/client/get:
    get:
      summary: "GET api/v0/pool/client/get"
      operationId: "getClient"
      parameters:
        - name: "id"
          in: "query"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/FullClientDto"
  /api/v0/pool/timetable/reserve:
    post:
      summary: "POST api/v0/pool/timetable/reserve"
      operationId: "reserve"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReservationDto"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ReservationResponseDto"
  /api/v0/pool/timetable/cancel:
    delete:
      summary: "DELETE api/v0/pool/timetable/cancel"
      operationId: "deleteReservation"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelReservationDto"
        required: true
      responses:
        "204":
          description: "No Content"
  /api/v0/pool/timetable/all:
    get:
      summary: "GET api/v0/pool/timetable/all"
      operationId: "getBusyHours"
      parameters:
        - name: "date"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ReservationDto"
  /api/v0/pool/timetable/available:
    get:
      summary: "GET api/v0/pool/timetable/available"
      operationId: "getAvailableHours"
      parameters:
        - name: "date"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ReservationDto"
  /api/v0/pool/timetable/search:
    get:
      summary: "GET api/v0/pool/timetable/search"
      operationId: "getReservations"
      parameters:
        - name: "name"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "date"
          in: "query"
          required: true
          schema:
            type: "string"
            format: "date-time"
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/ReservationResponseDto"
components:
  schemas:
    UpdateClientDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
    FullClientDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
    CreateClientDto:
      type: "object"
      properties:
        name:
          type: "string"
        phone:
          type: "string"
        email:
          type: "string"
    ShortClientDto:
      type: "object"
      properties:
        id:
          type: "integer"
          format: "int64"
        name:
          type: "string"
    CreateReservationDto:
      type: "object"
      properties:
        clientId:
          type: "integer"
          format: "int64"
        dateTime:
          type: "string"
          format: "date-time"
        hours:
          type: "integer"
          format: "int32"
    ReservationResponseDto:
      type: "object"
      properties:
        orderId:
          type: "string"
          format: "uuid"
    CancelReservationDto:
      type: "object"
      properties:
        clientId:
          type: "integer"
          format: "int64"
        orderId:
          type: "string"
          format: "uuid"
    ReservationDto:
      type: "object"
      properties:
        time:
          type: "string"
        count:
          type: "integer"
          format: "int32"